{"ast":null,"code":"var _jsxFileName = \"/home/user1/Development/taraxa/explorer-api/pages/tx/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSwr from 'swr';\n\nconst fetcher = url => fetch(url).then(res => res.json());\n\nexport default function User() {\n  const router = useRouter();\n  const {\n    data,\n    error\n  } = useSwr(`/api/tx/${router.query.id}`, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, \"Failed to load tx\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 10\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }\n  }, \"Tx \", data._id));\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/tx/[id].js"],"names":["useRouter","useSwr","fetcher","url","fetch","then","res","json","User","router","data","error","query","id","_id"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAzB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM;AAAEU,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAAE,WAAUQ,MAAM,CAACG,KAAP,CAAaC,EAAG,EAA5B,EAA+BX,OAA/B,CAA9B;AAEA,MAAIS,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQA,IAAI,CAACI,GAAb,CADE,CAAP;AAGD","sourcesContent":["import { useRouter } from 'next/router'\nimport useSwr from 'swr'\n\nconst fetcher = (url) => fetch(url).then((res) => res.json())\n\nexport default function User() {\n  const router = useRouter()\n  const { data, error } = useSwr(`/api/tx/${router.query.id}`, fetcher)\n\n  if (error) return <div>Failed to load tx</div>\n  if (!data) return <div>Loading...</div>\n\n  return <div>\n       <h1>Tx {data._id}</h1>\n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}