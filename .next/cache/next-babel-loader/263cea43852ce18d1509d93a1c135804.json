{"ast":null,"code":"import config from 'config';\nimport mongoose from 'mongoose';\nimport Block from '../../../models/block';\nexport default async function userHandler(req, res) {\n  try {\n    mongoose.connection._readyState || (await mongoose.connect(config.mongo.uri, config.mongo.options));\n  } catch (e) {\n    console.error(e);\n    return res.status(500).json({\n      error: 'Internal error. Please try your request again.'\n    });\n  }\n\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        const block = await Block.findOne({\n          _id: id\n        });\n\n        if (block) {\n          return res.json(block);\n        }\n\n        return res.status(404).json({\n          error: 'Not found'\n        });\n      } catch (e) {\n        console.error(e);\n        res.status(500).json({\n          error: 'Internal error. Please try your request again.'\n        });\n      }\n\n      break;\n\n    default:\n      res.setHeader('Allow', ['GET']);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/api/block/[id].js"],"names":["config","mongoose","Block","userHandler","req","res","connection","_readyState","connect","mongo","uri","options","e","console","error","status","json","query","id","method","block","findOne","_id","setHeader","end"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,eAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AAChD,MAAI;AACAJ,IAAAA,QAAQ,CAACK,UAAT,CAAoBC,WAApB,KAAmC,MAAMN,QAAQ,CAACO,OAAT,CAAiBR,MAAM,CAACS,KAAP,CAAaC,GAA9B,EAAmCV,MAAM,CAACS,KAAP,CAAaE,OAAhD,CAAzC;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACRC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACA,WAAOP,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACF,MAAAA,KAAK,EAAE;AAAR,KAArB,CAAP;AACH;;AACD,QAAM;AACFG,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD,KADL;AAEFC,IAAAA;AAFE,MAGFf,GAHJ;;AAKA,UAAQe,MAAR;AACI,SAAK,KAAL;AACI,UAAI;AACA,cAAMC,KAAK,GAAG,MAAMlB,KAAK,CAACmB,OAAN,CAAc;AAACC,UAAAA,GAAG,EAAEJ;AAAN,SAAd,CAApB;;AACA,YAAIE,KAAJ,EAAW;AACP,iBAAOf,GAAG,CAACW,IAAJ,CAASI,KAAT,CAAP;AACH;;AACD,eAAOf,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACF,UAAAA,KAAK,EAAE;AAAR,SAArB,CAAP;AACH,OAND,CAME,OAAOF,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACAP,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACF,UAAAA,KAAK,EAAE;AAAR,SAArB;AACH;;AACD;;AACJ;AACIT,MAAAA,GAAG,CAACkB,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACAlB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBS,GAAhB,CAAqB,UAASL,MAAO,cAArC;AAfR;AAiBH","sourcesContent":["import config from 'config';\nimport mongoose from 'mongoose';\n\nimport Block from '../../../models/block';\n\nexport default async function userHandler(req, res) {\n    try {\n        mongoose.connection._readyState || await mongoose.connect(config.mongo.uri, config.mongo.options);\n    } catch (e) {\n        console.error(e);\n        return res.status(500).json({error: 'Internal error. Please try your request again.'});\n    }\n    const {\n        query: {id},\n        method,\n    } = req;\n\n    switch (method) {\n        case 'GET':\n            try {\n                const block = await Block.findOne({_id: id});\n                if (block) {\n                    return res.json(block);\n                }\n                return res.status(404).json({error: 'Not found'});\n            } catch (e) {\n                console.error(e);\n                res.status(500).json({error: 'Internal error. Please try your request again.'});\n            }\n            break;\n        default:\n            res.setHeader('Allow', ['GET']);\n            res.status(405).end(`Method ${method} Not Allowed`);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}