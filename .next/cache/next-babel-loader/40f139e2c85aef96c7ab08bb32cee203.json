{"ast":null,"code":"const mongoose = require('mongoose');\n\nconst Block = new mongoose.Schema({\n  _id: {\n    type: String\n  },\n  // block hash\n  author: {\n    type: String\n  },\n  extraData: {\n    type: String\n  },\n  gasLimit: {\n    type: Number\n  },\n  gasUsed: {\n    type: Number\n  },\n  logsBloom: {\n    type: String\n  },\n  miner: {\n    type: String\n  },\n  mixHash: {\n    type: String\n  },\n  nonce: {\n    type: Number\n  },\n  number: {\n    type: Number,\n    unique: true\n  },\n  parentHash: {\n    type: String\n  },\n  receiptsRoot: {\n    type: String\n  },\n  sha3Uncles: {\n    type: String\n  },\n  size: {\n    type: Number\n  },\n  stateRoot: {\n    type: String\n  },\n  timestamp: {\n    type: Date,\n    index: true\n  },\n  totalDifficulty: {\n    type: Number\n  },\n  transactions: [{\n    type: String,\n    ref: 'Tx'\n  }],\n  transactionsRoot: {\n    type: String\n  },\n  uncles: [{\n    type: String\n  }]\n}, {\n  versionKey: false\n});\n\nBlock.statics.fromRPC = function fromRPC(data) {\n  const json = Object.assign({}, data); // move hash to primary key _id\n\n  json._id = json.hash;\n  delete json.hash;\n  const hexKeys = ['gasLimit', 'gasUsed', 'nonce', 'number', 'size', 'timestamp'];\n  hexKeys.forEach(key => {\n    if (json[key]) {\n      json[key] = parseInt(json[key], 16);\n    }\n\n    if (key === 'timestamp') {\n      json[key] = json[key] * 1000;\n    }\n  });\n\n  if (json.transactions && json.transactions.length) {\n    json.transactions = json.transactions.map(doc => doc.hash || doc);\n  }\n\n  return new this(json);\n};\n\nBlock.methods.toRPC = function toRPC() {\n  const json = this.toJSON(); // get hash from primary key _id\n\n  json.hash = this._id;\n  delete json._id;\n  const hexKeys = ['gasLimit', 'gasUsed', 'nonce', 'number', 'size', 'timestamp'];\n  hexKeys.forEach(key => {\n    if (key === 'timestamp') {\n      json[key] = this[key].valueOf() / 1000;\n    }\n\n    if (this[key]) {\n      json[key] = this[key].toString(16);\n    }\n  });\n  return json;\n};\n\nmodule.exports = mongoose.models.Block || mongoose.model('Block', Block);","map":null,"metadata":{},"sourceType":"script"}