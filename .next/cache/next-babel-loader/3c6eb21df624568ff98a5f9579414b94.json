{"ast":null,"code":"import config from 'config';\nimport mongoose from 'mongoose';\nimport Block from '../../models/block';\nexport default async function handler(req, res) {\n  if (mongoose.connection._readyState === 0) {\n    try {\n      await mongoose.connect(config.mongo.uri, config.mongo.options);\n    } catch (e) {\n      res.json({\n        error: 'Internal error. Please try your request again.'\n      }).status(500);\n      process.exit();\n    }\n  }\n\n  let skip = Number(req.query.skip) || 0;\n  let limit = Number(req.query.limit) || 20;\n  let reverse = Boolean(req.query.reverse);\n\n  try {\n    const blocks = await Block.find().limit(limit).skip(skip).sort({\n      number: reverse ? -1 : 1\n    });\n    res.json(blocks);\n  } catch (e) {\n    console.error(e);\n    res.json({\n      error: 'Internal error. Please try your request again.'\n    }).status(500);\n  }\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/api/blocks.js"],"names":["config","mongoose","Block","handler","req","res","connection","_readyState","connect","mongo","uri","options","e","json","error","status","process","exit","skip","Number","query","limit","reverse","Boolean","blocks","find","sort","number","console"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C,MAAIJ,QAAQ,CAACK,UAAT,CAAoBC,WAApB,KAAoC,CAAxC,EAA2C;AACvC,QAAI;AACA,YAAMN,QAAQ,CAACO,OAAT,CAAiBR,MAAM,CAACS,KAAP,CAAaC,GAA9B,EAAmCV,MAAM,CAACS,KAAP,CAAaE,OAAhD,CAAN;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRP,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAT,EAAoEC,MAApE,CAA2E,GAA3E;AACAC,MAAAA,OAAO,CAACC,IAAR;AACH;AACJ;;AAED,MAAIC,IAAI,GAAGC,MAAM,CAACf,GAAG,CAACgB,KAAJ,CAAUF,IAAX,CAAN,IAA0B,CAArC;AACA,MAAIG,KAAK,GAAGF,MAAM,CAACf,GAAG,CAACgB,KAAJ,CAAUC,KAAX,CAAN,IAA2B,EAAvC;AACA,MAAIC,OAAO,GAAGC,OAAO,CAACnB,GAAG,CAACgB,KAAJ,CAAUE,OAAX,CAArB;;AAEA,MAAI;AACA,UAAME,MAAM,GAAG,MAAMtB,KAAK,CAACuB,IAAN,GAAaJ,KAAb,CAAmBA,KAAnB,EAA0BH,IAA1B,CAA+BA,IAA/B,EAAqCQ,IAArC,CAA0C;AAACC,MAAAA,MAAM,EAAEL,OAAO,GAAG,CAAC,CAAJ,GAAQ;AAAxB,KAA1C,CAArB;AACAjB,IAAAA,GAAG,CAACQ,IAAJ,CAASW,MAAT;AACH,GAHD,CAGE,OAAOZ,CAAP,EAAU;AACRgB,IAAAA,OAAO,CAACd,KAAR,CAAcF,CAAd;AACAP,IAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAT,EAAoEC,MAApE,CAA2E,GAA3E;AACH;AACJ","sourcesContent":["import config from 'config';\nimport mongoose from 'mongoose';\n\nimport Block from '../../models/block';\n\nexport default async function handler(req, res) {\n    if (mongoose.connection._readyState === 0) {\n        try {\n            await mongoose.connect(config.mongo.uri, config.mongo.options);\n        } catch (e) {\n            res.json({error: 'Internal error. Please try your request again.'}).status(500);\n            process.exit();\n        }\n    }\n\n    let skip = Number(req.query.skip) || 0;\n    let limit = Number(req.query.limit) || 20;\n    let reverse = Boolean(req.query.reverse);\n\n    try {\n        const blocks = await Block.find().limit(limit).skip(skip).sort({number: reverse ? -1 : 1});\n        res.json(blocks);\n    } catch (e) {\n        console.error(e);\n        res.json({error: 'Internal error. Please try your request again.'}).status(500);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}