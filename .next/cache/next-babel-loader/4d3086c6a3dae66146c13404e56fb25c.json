{"ast":null,"code":"var _jsxFileName = \"/home/user1/Development/taraxa/explorer-api/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useSwr from 'swr';\nimport Link from 'next/link';\n\nconst fetcher = url => fetch(url).then(res => res.json());\n\nexport default function Index() {\n  const {\n    data,\n    error\n  } = useSwr('/api/blocks?reverse=true', fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 21\n    }\n  }, \"Failed to load blocks\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, data.map(block => __jsx(\"li\", {\n    key: block._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/block/[id]\",\n    as: `/block/${block._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, `Block ${block.number} ${block._id}`)))));\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/index.js"],"names":["useSwr","Link","fetcher","url","fetch","then","res","json","Index","data","error","map","block","_id","number"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,KAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAzB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBV,MAAM,CAAC,0BAAD,EAA6BE,OAA7B,CAA9B;AAEA,MAAIQ,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACE,GAAL,CAAUC,KAAD,IACR;AAAI,IAAA,GAAG,EAAEA,KAAK,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAG,UAASD,KAAK,CAACC,GAAI,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,SAAQD,KAAK,CAACE,MAAO,IAAGF,KAAK,CAACC,GAAI,EAAvC,CADF,CADF,CADD,CADH,CADF;AAWD","sourcesContent":["import useSwr from 'swr'\nimport Link from 'next/link'\n\nconst fetcher = (url) => fetch(url).then((res) => res.json())\n\nexport default function Index() {\n  const { data, error } = useSwr('/api/blocks?reverse=true', fetcher)\n\n  if (error) return <div>Failed to load blocks</div>\n  if (!data) return <div>Loading...</div>\n\n  return (\n    <ul>\n      {data.map((block) => (\n        <li key={block._id}>\n          <Link href=\"/block/[id]\" as={`/block/${block._id}`}>\n            <a>{`Block ${block.number} ${block._id}`}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}