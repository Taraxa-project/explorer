{"ast":null,"code":"var _jsxFileName = \"/home/user1/Development/taraxa/explorer-api/pages/block/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSwr from 'swr';\nimport Link from 'next/link';\n\nconst fetcher = url => fetch(url).then(res => res.json());\n\nexport default function User() {\n  const router = useRouter();\n  const {\n    data,\n    error\n  } = useSwr(`/api/block/${router.query.id}`, fetcher);\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, \"Failed to load block\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Block \", data._id), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, data.transactions.map(tx => __jsx(\"li\", {\n    key: tx._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/tx/[id]\",\n    as: `/tx/${tx._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, `Tx ${tx._id}`))))));\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/block/[id].js"],"names":["useRouter","useSwr","Link","fetcher","url","fetch","then","res","json","User","router","data","error","query","id","_id","transactions","map","tx"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,OAAO,GAAIC,GAAD,IAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAzB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,QAAMC,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAkBX,MAAM,CAAE,cAAaS,MAAM,CAACG,KAAP,CAAaC,EAAG,EAA/B,EAAkCX,OAAlC,CAA9B;AAEA,MAAIS,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,IAAI,CAACI,GAAhB,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCJ,IAAI,CAACK,YAAL,CAAkBC,GAAlB,CAAuBC,EAAD,IACrB;AAAI,IAAA,GAAG,EAAEA,EAAE,CAACH,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,EAAE,EAAG,OAAMG,EAAE,CAACH,GAAI,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAK,MAAKG,EAAE,CAACH,GAAI,EAAjB,CADF,CADF,CADD,CADD,CAFG,CAAP;AAYD","sourcesContent":["import { useRouter } from 'next/router'\nimport useSwr from 'swr'\nimport Link from 'next/link'\n\nconst fetcher = (url) => fetch(url).then((res) => res.json())\n\nexport default function User() {\n  const router = useRouter()\n  const { data, error } = useSwr(`/api/block/${router.query.id}`, fetcher)\n\n  if (error) return <div>Failed to load block</div>\n  if (!data) return <div>Loading...</div>\n\n  return <div>\n      <h1>Block {data._id}</h1>\n      <ul>\n      {data.transactions.map((tx) => (\n        <li key={tx._id}>\n          <Link href=\"/tx/[id]\" as={`/tx/${tx._id}`}>\n            <a>{`Tx ${tx._id}`}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n    </div>\n}\n"]},"metadata":{},"sourceType":"module"}