{"ast":null,"code":"import config from 'config';\nimport mongoose from 'mongoose';\nimport Block from '../../../models/block';\nexport default async function userHandler(req, res) {\n  if (mongoose.connection._readyState === 0) {\n    try {\n      await mongoose.connect(config.mongo.uri, config.mongo.options);\n    } catch (e) {\n      res.json({\n        error: 'Internal error. Please try your request again.'\n      }).status(500);\n      process.exit();\n    }\n  }\n\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        const block = await Block.findOne({\n          _id: id\n        });\n\n        if (block) {\n          return res.json(block);\n        }\n\n        return res.json({\n          error: 'Not found'\n        }).statusCode(404);\n      } catch (e) {\n        console.error(e);\n        res.json({\n          error: 'Internal error. Please try your request again.'\n        }).status(500);\n      }\n\n      break;\n\n    default:\n      res.setHeader('Allow', ['GET']);\n      res.status(405).end(`Method ${method} Not Allowed`);\n  }\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/api/block/[id].js"],"names":["config","mongoose","Block","userHandler","req","res","connection","_readyState","connect","mongo","uri","options","e","json","error","status","process","exit","query","id","method","block","findOne","_id","statusCode","console","setHeader","end"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,KAAP,MAAkB,uBAAlB;AAEA,eAAe,eAAeC,WAAf,CAA2BC,GAA3B,EAAgCC,GAAhC,EAAqC;AAChD,MAAIJ,QAAQ,CAACK,UAAT,CAAoBC,WAApB,KAAoC,CAAxC,EAA2C;AACvC,QAAI;AACA,YAAMN,QAAQ,CAACO,OAAT,CAAiBR,MAAM,CAACS,KAAP,CAAaC,GAA9B,EAAmCV,MAAM,CAACS,KAAP,CAAaE,OAAhD,CAAN;AACH,KAFD,CAEE,OAAOC,CAAP,EAAU;AACRP,MAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,QAAAA,KAAK,EAAE;AAAR,OAAT,EAAoEC,MAApE,CAA2E,GAA3E;AACAC,MAAAA,OAAO,CAACC,IAAR;AACH;AACJ;;AACD,QAAM;AACFC,IAAAA,KAAK,EAAE;AAACC,MAAAA;AAAD,KADL;AAEFC,IAAAA;AAFE,MAGFhB,GAHJ;;AAKA,UAAQgB,MAAR;AACI,SAAK,KAAL;AACI,UAAI;AACA,cAAMC,KAAK,GAAG,MAAMnB,KAAK,CAACoB,OAAN,CAAc;AAACC,UAAAA,GAAG,EAAEJ;AAAN,SAAd,CAApB;;AACA,YAAIE,KAAJ,EAAW;AACP,iBAAOhB,GAAG,CAACQ,IAAJ,CAASQ,KAAT,CAAP;AACH;;AACD,eAAOhB,GAAG,CAACQ,IAAJ,CAAS;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAT,EAA+BU,UAA/B,CAA0C,GAA1C,CAAP;AACH,OAND,CAME,OAAOZ,CAAP,EAAU;AACRa,QAAAA,OAAO,CAACX,KAAR,CAAcF,CAAd;AACAP,QAAAA,GAAG,CAACQ,IAAJ,CAAS;AAACC,UAAAA,KAAK,EAAE;AAAR,SAAT,EAAoEC,MAApE,CAA2E,GAA3E;AACH;;AACD;;AACJ;AACIV,MAAAA,GAAG,CAACqB,SAAJ,CAAc,OAAd,EAAuB,CAAC,KAAD,CAAvB;AACArB,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBY,GAAhB,CAAqB,UAASP,MAAO,cAArC;AAfR;AAiBH","sourcesContent":["import config from 'config';\nimport mongoose from 'mongoose';\n\nimport Block from '../../../models/block';\n\nexport default async function userHandler(req, res) {\n    if (mongoose.connection._readyState === 0) {\n        try {\n            await mongoose.connect(config.mongo.uri, config.mongo.options);\n        } catch (e) {\n            res.json({error: 'Internal error. Please try your request again.'}).status(500);\n            process.exit();\n        }\n    }\n    const {\n        query: {id},\n        method,\n    } = req;\n\n    switch (method) {\n        case 'GET':\n            try {\n                const block = await Block.findOne({_id: id});\n                if (block) {\n                    return res.json(block);\n                }\n                return res.json({error: 'Not found'}).statusCode(404);\n            } catch (e) {\n                console.error(e);\n                res.json({error: 'Internal error. Please try your request again.'}).status(500);\n            }\n            break;\n        default:\n            res.setHeader('Allow', ['GET']);\n            res.status(405).end(`Method ${method} Not Allowed`);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}