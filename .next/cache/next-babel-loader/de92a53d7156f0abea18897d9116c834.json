{"ast":null,"code":"var _jsxFileName = \"/home/user1/Development/taraxa/explorer-api/pages/block/[id].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from 'next/router';\nimport useSwr from 'swr';\nimport Link from 'next/link';\n\nvar fetcher = function fetcher(url) {\n  return fetch(url).then(function (res) {\n    return res.json();\n  });\n};\n\nexport default function User() {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useSwr = useSwr(\"/api/block/\".concat(router.query.id, \"?fullTransactions=true\"), fetcher),\n      data = _useSwr.data,\n      error = _useSwr.error;\n\n  if (error) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 21\n    }\n  }, \"Failed to load block\");\n  if (!data) return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Loading...\");\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 10\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Block \", data._id), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, data.transactions.map(function (tx) {\n    return __jsx(\"li\", {\n      key: tx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      href: \"/tx/[id]\",\n      as: \"/tx/\".concat(tx),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Tx \".concat(tx))));\n  })));\n}\n\n_s(User, \"0ST1BDL2a2x8mdZH1V3Mxu6c/7s=\", false, function () {\n  return [useRouter, useSwr];\n});\n\n_c = User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/block/[id].js"],"names":["useRouter","useSwr","Link","fetcher","url","fetch","then","res","json","User","router","query","id","data","error","_id","transactions","map","tx"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD;AAAA,SAASC,KAAK,CAACD,GAAD,CAAL,CAAWE,IAAX,CAAgB,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GAAhB,CAAT;AAAA,CAAhB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA;;AAC7B,MAAMC,MAAM,GAAGV,SAAS,EAAxB;;AAD6B,gBAELC,MAAM,sBAAeS,MAAM,CAACC,KAAP,CAAaC,EAA5B,6BAAwDT,OAAxD,CAFD;AAAA,MAErBU,IAFqB,WAErBA,IAFqB;AAAA,MAEfC,KAFe,WAEfA,KAFe;;AAI7B,MAAIA,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEX,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWA,IAAI,CAACE,GAAhB,CADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCF,IAAI,CAACG,YAAL,CAAkBC,GAAlB,CAAsB,UAACC,EAAD;AAAA,WACrB;AAAI,MAAA,GAAG,EAAEA,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,EAAE,gBAASA,EAAT,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAUA,EAAV,EADF,CADF,CADqB;AAAA,GAAtB,CADD,CAFG,CAAP;AAYD;;GAnBuBT,I;UACPT,S,EACSC,M;;;KAFFQ,I","sourcesContent":["import { useRouter } from 'next/router'\nimport useSwr from 'swr'\nimport Link from 'next/link'\n\nconst fetcher = (url) => fetch(url).then((res) => res.json())\n\nexport default function User() {\n  const router = useRouter()\n  const { data, error } = useSwr(`/api/block/${router.query.id}?fullTransactions=true`, fetcher)\n\n  if (error) return <div>Failed to load block</div>\n  if (!data) return <div>Loading...</div>\n\n  return <div>\n      <h1>Block {data._id}</h1>\n      <ul>\n      {data.transactions.map((tx) => (\n        <li key={tx}>\n          <Link href=\"/tx/[id]\" as={`/tx/${tx}`}>\n            <a>{`Tx ${tx}`}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n    </div>\n}\n"]},"metadata":{},"sourceType":"module"}