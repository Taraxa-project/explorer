{"ast":null,"code":"import config from 'config';\nimport mongoose from 'mongoose';\nimport Block from '../../models/block';\nexport default async function handler(req, res) {\n  try {\n    await mongoose.connect(config.mongo.uri, config.mongo.options);\n  } catch (e) {\n    return res.status(500).json({\n      error: 'Internal error. Please try your request again.'\n    });\n  }\n\n  let skip = Number(req.query.skip) || 0;\n  let limit = Number(req.query.limit) || 20;\n  let reverse = Boolean(req.query.reverse);\n\n  try {\n    const blocks = await Block.find().limit(limit).skip(skip).sort({\n      number: reverse ? -1 : 1\n    });\n    res.json(blocks);\n  } catch (e) {\n    console.error(e);\n    res.status(500).json({\n      error: 'Internal error. Please try your request again.'\n    });\n  }\n}","map":{"version":3,"sources":["/home/user1/Development/taraxa/explorer-api/pages/api/blocks.js"],"names":["config","mongoose","Block","handler","req","res","connect","mongo","uri","options","e","status","json","error","skip","Number","query","limit","reverse","Boolean","blocks","find","sort","number","console"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,eAAe,eAAeC,OAAf,CAAuBC,GAAvB,EAA4BC,GAA5B,EAAiC;AAC5C,MAAI;AACA,UAAMJ,QAAQ,CAACK,OAAT,CAAiBN,MAAM,CAACO,KAAP,CAAaC,GAA9B,EAAmCR,MAAM,CAACO,KAAP,CAAaE,OAAhD,CAAN;AACH,GAFD,CAEE,OAAOC,CAAP,EAAU;AACR,WAAOL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,KAAK,EAAE;AAAR,KAArB,CAAP;AACH;;AAED,MAAIC,IAAI,GAAGC,MAAM,CAACX,GAAG,CAACY,KAAJ,CAAUF,IAAX,CAAN,IAA0B,CAArC;AACA,MAAIG,KAAK,GAAGF,MAAM,CAACX,GAAG,CAACY,KAAJ,CAAUC,KAAX,CAAN,IAA2B,EAAvC;AACA,MAAIC,OAAO,GAAGC,OAAO,CAACf,GAAG,CAACY,KAAJ,CAAUE,OAAX,CAArB;;AAEA,MAAI;AACA,UAAME,MAAM,GAAG,MAAMlB,KAAK,CAACmB,IAAN,GAAaJ,KAAb,CAAmBA,KAAnB,EAA0BH,IAA1B,CAA+BA,IAA/B,EAAqCQ,IAArC,CAA0C;AAACC,MAAAA,MAAM,EAAEL,OAAO,GAAG,CAAC,CAAJ,GAAQ;AAAxB,KAA1C,CAArB;AACAb,IAAAA,GAAG,CAACO,IAAJ,CAASQ,MAAT;AACH,GAHD,CAGE,OAAOV,CAAP,EAAU;AACRc,IAAAA,OAAO,CAACX,KAAR,CAAcH,CAAd;AACAL,IAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,KAAK,EAAE;AAAR,KAArB;AACH;AACJ","sourcesContent":["import config from 'config';\nimport mongoose from 'mongoose';\n\nimport Block from '../../models/block';\n\nexport default async function handler(req, res) {\n    try {\n        await mongoose.connect(config.mongo.uri, config.mongo.options);\n    } catch (e) {\n        return res.status(500).json({error: 'Internal error. Please try your request again.'});\n    }\n\n    let skip = Number(req.query.skip) || 0;\n    let limit = Number(req.query.limit) || 20;\n    let reverse = Boolean(req.query.reverse);\n\n    try {\n        const blocks = await Block.find().limit(limit).skip(skip).sort({number: reverse ? -1 : 1});\n        res.json(blocks);\n    } catch (e) {\n        console.error(e);\n        res.status(500).json({error: 'Internal error. Please try your request again.'});\n    }\n}\n"]},"metadata":{},"sourceType":"module"}